

plugins {
    id 'java'
    id 'base'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'com.github.johnrengelman.shadow' version '2.0.4'


}
repositories {
    mavenCentral()
}

def springVersion="2.0.4.RELEASE"

//root project has no executable
bootJar.enabled = false




dependencies {
    compile project(":hello")
    compile project(":common")
}


allprojects{
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

}

task fatJar{
    println "Creating fat jars"
}



subprojects {

    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    repositories {
        mavenCentral()
    }

//    jar.enabled=false
//    bootJar.enabled = true

    dependencies {

        //json libraries
        compile group: 'org.json', name: 'json', version: '20180130'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'

        //spring boot libraries
        compile 'org.springframework.boot:spring-boot-starter-web'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        compile 'org.springframework.boot:spring-boot-starter-tomcat'

//        //connection to amazon
//        compile group: 'com.amazonaws', 'name': 'aws-lambda-java-core', version: '1.2.0'
//        testCompile group: 'com.amazonaws.serverless', 'name': 'aws-serverless-java-container-core', version: '1.1.3'

        //useful libraries from google
        compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'




        //libraries for more expressive testing
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'





        shadowJar { zip64 true }
    }


//    test {
//        useJUnitPlatform()
//        testLogging {
//            events "passed", "skipped", "failed"
//            exceptionFormat "FULL"
//            outputs.upToDateWhen {false}
//            showStandardStreams = true
//            reports.html.enabled=true
//        }


//    }


    task fatJar(dependsOn: shadowJar){}

}




