plugins {
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.5"
}

repositories {
    maven {
        url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
    }
}

apply plugin: 'java'
apply plugin: "io.swagger.core.v3.swagger-gradle-plugin"

dependencies {

    compile project(":dynamo")


    testCompile group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.11.+'
    //jersey libraries
    compile ('org.glassfish.jersey.media:jersey-media-json-jackson:2.27')
	compile ('org.glassfish.jersey.inject:jersey-hk2:2.27') {
        exclude group : 'javax.inject'
    }
    
    testCompile ('org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.27')

	compile ('io.swagger.core.v3:swagger-jaxrs2:2.0.5')
	compile ('io.swagger.core.v3:swagger-jaxrs2-servlet-initializer:2.0.5')

    //connection to amazon
	compile ('com.amazonaws:aws-lambda-java-core:1.2.0')
    compile ('com.amazonaws.serverless:aws-serverless-java-container-jersey:1.1')


    compile ('io.symphonia:lambda-logging:1.0.1')


}


task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}


test {
    dependsOn copyNativeDeps
    //Copy native path for testing locally DynamoDB
    systemProperty "java.library.path", 'build/libs'
}


jar.enabled = false


shadowJar {
    archiveName = "${baseName}-fat.jar"
    exclude('org.apache.tomcat.embed:*')
}

resolve {
    outputFormat = 'YAML'
    prettyPrint = 'TRUE'
    classpath = sourceSets.main.runtimeClasspath
    resourcePackages = ['no.bibsys.web']
    outputPath = "${buildDir}/openapi"
}


// this task is necessary because OpenAPI does not support nested @Extension annotations
task fixAws(type: Copy) {
    from("${buildDir}/openapi") {
        include "openapi.yaml"
    }
    into("${buildDir}/openapi-aws-modified")
    filter {
       String line -> line.replaceAll('URI_PLACEHOLDER',
                                      '\n          Fn::Sub: \"arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations\"')
   	}
}