plugins {
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.5"
}

repositories {
    maven {
        url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
    }

    maven { url "https://dl.bintray.com/orestis-unit/aws-build-tools" }
}

apply plugin: 'java'
apply plugin: "io.swagger.core.v3.swagger-gradle-plugin"

dependencies {

    compile project(":dynamo")
    testCompile ("com.amazonaws:DynamoDBLocal:1.11.+")

    //jersey libraries
    compile("org.glassfish.jersey.media:jersey-media-json-jackson:2.27")
    compile("org.glassfish.jersey.inject:jersey-hk2:2.27") {
        exclude group: 'javax.inject'
    }
	compile ('com.google.code.gson:gson:2.8.5')

    testCompile("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.27")

    compile("io.swagger.core.v3:swagger-jaxrs2:2.0.5")
    compile("io.swagger.core.v3:swagger-jaxrs2-servlet-initializer:2.0.5")

    //connection to amazon
    compile("com.amazonaws:aws-lambda-java-core:1.2.0")
    compile("com.amazonaws.serverless:aws-serverless-java-container-jersey:1.1")

    compile ("no.bibsys.aws:aws-build-tools:2018.12.01.20.46")

	// Handlebars
	compile("com.github.jknack:handlebars:4.1.2")
	
	//RDF
	compile ("org.apache.jena:jena-core:3.9.0")
    compile ("org.apache.jena:jena-arq:3.9.0")
	

	// RDF
	compile group: 'org.apache.jena', name: 'jena-core', version: '3.9.0'
    compile group: 'org.apache.jena', name: 'jena-arq', version: '3.9.0'
	

    // for testing
    testCompile ("org.hamcrest:hamcrest-junit:2.0.0.0")
    testCompile ("org.mockito:mockito-core:2.23.0")



}


task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}


test {
    dependsOn copyNativeDeps
    //Copy native path for testing locally DynamoDB
    systemProperty "java.library.path", 'build/libs'
}


jar.enabled = false


shadowJar {
    archiveName = "${baseName}-fat.jar"
    exclude('org.apache.tomcat.embed:*')
}

resolve {
    outputFormat = 'YAML'
    prettyPrint = 'TRUE'
    classpath = sourceSets.main.runtimeClasspath
    resourcePackages = ['no.bibsys.web']
    outputPath = "${buildDir}/openapi"
}