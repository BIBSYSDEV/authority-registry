plugins {
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.5"
}

repositories {
    maven {
        url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
    }

    maven { url "https://dl.bintray.com/orestis-unit/aws-build-tools" }
}

apply plugin: 'java'
apply plugin: "io.swagger.core.v3.swagger-gradle-plugin"

dependencies {

    compile project(":dynamo")
    testCompile ("com.amazonaws:DynamoDBLocal:1.11.+")

    //jersey libraries
    compile("org.glassfish.jersey.media:jersey-media-json-jackson:2.27")
    compile("org.glassfish.jersey.inject:jersey-hk2:2.27") {
        exclude group: 'javax.inject'
    }

    testCompile("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.27")

    compile("io.swagger.core.v3:swagger-jaxrs2:2.0.5")
    compile("io.swagger.core.v3:swagger-jaxrs2-servlet-initializer:2.0.5")

    //connection to amazon
    compile("com.amazonaws:aws-lambda-java-core:1.2.0")
    compile("com.amazonaws.serverless:aws-serverless-java-container-jersey:1.1")

    compile ("no.bibsys.aws:aws-build-tools:2018.12.11.08.45")

    // for testing
    testCompile ("org.hamcrest:hamcrest-junit:2.0.0.0")
    testCompile ("org.mockito:mockito-core:2.23.0")




}


task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}


test {
    dependsOn copyNativeDeps
    //Copy native path for testing locally DynamoDB
    systemProperty "java.library.path", 'build/libs'
}


jar.enabled = false


shadowJar {
    archiveName = "${baseName}-fat.jar"
    exclude('org.apache.tomcat.embed:*')
}

resolve {
    outputFormat = 'YAML'
    prettyPrint = 'TRUE'
    classpath = sourceSets.main.runtimeClasspath
    resourcePackages = ['no.bibsys.web']
    outputPath = "${buildDir}/openapi"
    openApiFile = new File("${projectDir}/src/main/resources/openapi-template.yml")
}

task fixAws(type: Copy) {
	String snippet = new File("${projectDir}/src/main/resources/openapi-lambda-authorizer-snippet.txt").text
    from("${buildDir}/openapi") {
        include "openapi.yaml"
    }
    into("${buildDir}/openapi-aws-modified")
    filter {
       String line -> line.replaceAll('      description: REPLACE_WITH_GRADLE',snippet)
   	}
}